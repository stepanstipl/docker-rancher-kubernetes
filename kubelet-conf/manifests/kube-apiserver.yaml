apiVersion: v1
kind: Pod
metadata:
  name: kube-apiserver
  namespace: kube-system
spec:
  hostNetwork: true
  containers:
    - name: kube-apiserver
      image: gcr.io/google_containers/kube-apiserver-amd64:v{{ K8S_VERSION }}
      command:
        - /bin/sh
        - -c
        - /usr/local/bin/kube-apiserver
          --insecure-bind-address=127.0.0.1 --insecure-port=8080
          --address=0.0.0.0 --secure-port=443
          --cloud-provider=aws
          --etcd-servers=http://127.0.0.1:2379
          --admission-control=NamespaceLifecycle,LimitRanger,SecurityContextDeny,ServiceAccount,ResourceQuota
          --runtime-config=extensions/v1beta1/deployments=true,extensions/v1beta1/daemonsets=true
          --service-cluster-ip-range=10.0.0.0/16
          --token-auth-file=/srv/kubernetes/known_tokens.csv
          --client-ca-file=/srv/kubernetes/ca.pem
          --tls-cert-file=/srv/kubernetes/kubernetes.pem --tls-private-key-file=/srv/kubernetes/kubernetes-key.pem
          --allow-privileged=False
          --v=2 --logtostderr=true 1>>/var/log/kube-apiserver.log 2>&1
      ports:
        - containerPort: 443
          hostPort: 443
          name: https
        - containerPort: 8080
          hostPort: 8080
          name: local
      volumeMounts:
        - mountPath: /srv/kubernetes
          name: srvkube
          readOnly: true
        - mountPath: /var/log/kube-apiserver.log
          name: logfile
        - mountPath: /etc/ssl
          name: etcssl
          readOnly: true
  volumes:
    - hostPath:
        path: /srv/kubernetes
      name: srvkube
    - hostPath:
        path: /var/log/kube-apiserver.log
      name: logfile
    - hostPath:
        path: /etc/ssl
      name: etcssl
